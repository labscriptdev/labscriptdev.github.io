import{l as V,u as j,f as N,r as w,c as O,w as x,o as g,b as c,x as p,d as L,a as m,t as M,e as v,F as z,i as I,s as k,q as b}from"./entry.43339234.js";import{_ as T}from"./lodash.6d7087da.js";const P=["transform","onMousedown"],B=["fill"],C={x:"0",y:"0","text-anchor":"middle","alignment-baseline":"middle","font-size":"3px"},R=m("hr",null,null,-1),U=m("div",{class:"font-weight-bold"}," Objetivo: encontrar o menor caminho entre os pontos ",-1),$=m("br",null,null,-1),D={class:"d-flex align-center",style:{gap:"15px"}},J={style:{"max-width":"200px"}},F={class:"flex-grow-1"},q=m("br",null,null,-1),A=m("br",null,null,-1),G={class:"d-flex",style:{gap:"10px"}},W={class:"flex-grow-1"},X=m("div",null,"Find path from",-1),Y={class:"flex-grow-1"},H=m("div",null,"To",-1),K=["transform","onMousedown"],Q=["fill"],Z={x:"0",y:"0","text-anchor":"middle","alignment-baseline":"middle","font-size":"3px"},ee={meta:{icon:null,name:"Dijkstra"}},se=Object.assign(ee,{__name:"index",setup(te){const E=o=>o.id==u.value.fromId?"#00aa00":o.id==u.value.toId?"#ff2222":"orange",u=V({fromId:0,toId:5,data:[{id:0,x:5,y:5},{id:1,x:40,y:15},{id:2,x:95,y:20},{id:3,x:10,y:60},{id:4,x:65,y:65},{id:5,x:90,y:50},{id:6,x:30,y:90},{id:7,x:55,y:90},{id:8,x:95,y:95}],edges:j(()=>{let o=[];return u.value.data.forEach(r=>{let l=u.value.data.filter(s=>s.id!=r.id).map(s=>({size:(()=>{const i=r.x-s.x,e=r.y-s.y;return Math.sqrt(i*i+e*e)})(),fromId:r.id,toId:s.id})).filter(s=>!o.filter(i=>i.fromId==s.toId).length);l=T.orderBy(l,["size"],["asc"]),l=T.slice(l,0,3),l.forEach(s=>{const n=u.value.getPoint(s.fromId),i=u.value.getPoint(s.toId);o.push({fromId:n.id,toId:i.id,size:s.size,x1:n.x,y1:n.y,x2:i.x,y2:i.y})})}),o}),path:j(()=>{const o=u.value,t=(r={},l={})=>(r=T.merge({id:!1,deep:0,visited:[],sizes:[],children:[]},r),r.visited.push(r.id),l[r.visited.join("-")]={size:r.sizes.reduce((s,n)=>s+n,0),path:r.visited},r.children=o.edges.filter(s=>s.fromId==r.id&&!r.visited.includes(s.toId)).map(s=>t({id:s.toId,deep:r.deep+1,visited:r.visited,sizes:[...r.sizes,s.size]},l)),r.deep==0?Object.values(l).filter(n=>o.toId==n.path.at(-1)).sort((n,i)=>n.size-i.size).map(n=>({size:n.size,edges:n.path.map((i,e)=>{if(!n.path[e+1])return null;const a=o.getPoint(i),d=o.getPoint(n.path[e+1]);return{fromId:a.id,toId:d.id,x1:a.x,y1:a.y,x2:d.x,y2:d.y}}).filter(i=>!!i)})).at(0)||{size:0,edges:[]}:r);return t({id:o.fromId})}),getPoint(o){return this.data.filter(t=>t.id==o).at(0)||!1},addRandom(o=10){this.data=[];for(let t=0;t<o;t++){const r=Math.round(Math.random()*100),l=Math.round(Math.random()*100);this.data.push({id:t,x:r,y:l})}}}),_=V({randomSize:10,addRandom(){u.value.addRandom(this.randomSize),u.value.fromId=0,u.value.toId=this.randomSize-1}});_.value.addRandom();const y=V({svg:!1,target:!1,point:!1,init(o,t){this.svg=o.currentTarget.closest("svg"),this.target=o.currentTarget,this.point=t,this.svg.addEventListener("mousemove",this.svgMousemove)},stop(o){this.svg.removeEventListener("mousemove",this.svgMousemove)},svgMousemove:o=>{const t=y.value.svg.clientWidth/100;y.value.point.x=o.offsetX/t,y.value.point.y=o.offsetY/t}}),f=N({from:"a",to:"e",places:[{id:"a",x:20,y:20},{id:"b",x:20,y:40},{id:"c",x:20,y:60},{id:"d",x:40,y:20},{id:"e",x:40,y:40}],source:[{from:"a",to:"b",weight:1,x:20,y:20},{from:"b",to:"c",weight:1,x:20,y:40},{from:"c",to:"d",weight:1,x:20,y:60},{from:"d",to:"e",weight:1,x:40,y:20},{from:"a",to:"e",weight:3,x:40,y:40}],result:j(()=>(console.clear(),console.log(JSON.stringify(f.dijkstra(f.from,f.to,f.source,f.places),null,2)),!1)),uid(){return[...Array(3).keys()].map(o=>"abcdefghijklmnopqrstuvwxyz".charAt(Math.floor(Math.random()*26))).join("").toUpperCase()},generate:{placesTotal:10,placeLinks:3,run(){const o=[...Array(this.placesTotal)].map(t=>f.uid());f.from=o[0],f.to=o[1],f.data=[],o.map(t=>{for(let r=0;r<=this.placeLinks;r++){const l=o[Math.floor(Math.random()*o.length)];let s=o[Math.floor(Math.random()*o.length)];l==s&&(s=!1);const n=Math.round(Math.random()*10);f.data.push({from:l,to:s,weight:n})}})}},dijkstra(o,t,r=[],l={}){const s=(a,d={})=>(d={weightSum:0,deep:0,path:[a],...d},r.filter(h=>h.from==a).map(h=>(h=JSON.parse(JSON.stringify(h)),h={...h,...d,children:[],weightSum:d.weightSum+h.weight,path:[...d.path,h.to]},h.children=s(h.to,{...d,weightSum:d.weightSum+h.weight,deep:d.deep+1,path:[...d.path,h.to]}),h))),n=(a,d=[])=>(a.map(h=>{d.push({...h,children:void 0}),d=n(h.children,d)}),d);r=JSON.parse(JSON.stringify(r)).map(a=>({from:!1,to:!1,weight:1,...a})),r.map(a=>{l.filter(S=>S.id==a.from).at(0)||!1||l.push({id:a.from}),l.filter(S=>S.id==a.to).at(0)||!1||l.push({id:a.to})});let i={path:!1,nodes:[]},e=s(o);return e=n(e),e=e.filter(a=>a.path[0]==o&&a.path[a.path.length-1]==t).sort((a,d)=>a.weightSum-d.weightSum).at(0)||!1,e.path&&(i.path=e,i.nodes=e.path.map(a=>l.filter(d=>d.id==a).at(0)||!1)),{from:o,to:t,source:r,places:l,result:i}}});return(o,t)=>{const r=w("v-text-field"),l=w("v-btn"),s=w("v-col"),n=w("v-row"),i=w("v-defaults-provider");return g(),O(i,{defaults:{VTextField:{variant:"outlined",density:"compact"}}},{default:x(()=>[c(n,null,{default:x(()=>[c(s,{cols:"6"},{default:x(()=>[c(r,{modelValue:p(f).generate.placesTotal,"onUpdate:modelValue":t[0]||(t[0]=e=>p(f).generate.placesTotal=e),modelModifiers:{number:!0},prefix:"Generate",suffix:"Places",type:"number"},null,8,["modelValue"]),c(r,{modelValue:p(f).generate.placeLinks,"onUpdate:modelValue":t[1]||(t[1]=e=>p(f).generate.placeLinks=e),modelModifiers:{number:!0},prefix:"With",suffix:"Links per place",type:"number"},null,8,["modelValue"]),c(l,{block:"",onClick:t[2]||(t[2]=e=>p(f).generate.run())},{default:x(()=>[L("Generate")]),_:1}),m("pre",null,M(p(f)),1)]),_:1}),c(s,{cols:"6"},{default:x(()=>[(g(),v("svg",{viewBox:"0 0 100 100",xmlns:"http://www.w3.org/2000/svg",style:{width:"100%",margin:"0 auto"},class:"border bg-grey-lighten-4",onMouseup:t[3]||(t[3]=k(e=>y.value.stop(e),["prevent"]))},[(g(!0),v(z,null,I(p(f).source,e=>(g(),v("g",{transform:`translate(${e.x}, ${e.y})`,onMousedown:k(a=>y.value.init(a,e),["prevent"]),style:{cursor:"grab"}},[m("circle",{cx:"0",cy:"0",r:"5",fill:E(e)},null,8,B),m("text",C,M(e.from),1)],40,P))),256))],32))]),_:1})]),_:1}),R,U,$,c(n,null,{default:x(()=>[c(s,{cols:"12",lg:"6"},{default:x(()=>[m("div",D,[m("div",J,[c(r,b({modelValue:_.value.randomSize,"onUpdate:modelValue":t[4]||(t[4]=e=>_.value.randomSize=e)},{type:"number",hideDetails:!0}),null,16,["modelValue"])]),m("div",F,[c(l,{block:"",onClick:t[5]||(t[5]=e=>_.value.addRandom())},{default:x(()=>[L("Create "+M(_.value.randomSize)+" points",1)]),_:1})])]),q,A,m("div",G,[m("div",W,[X,c(r,b({modelValue:u.value.fromId,"onUpdate:modelValue":t[6]||(t[6]=e=>u.value.fromId=e),modelModifiers:{number:!0}},{type:"number",hideDetails:!0,min:0,max:u.value.data.length-1}),null,16,["modelValue"])]),m("div",Y,[H,c(r,b({modelValue:u.value.toId,"onUpdate:modelValue":t[7]||(t[7]=e=>u.value.toId=e),modelModifiers:{number:!0}},{type:"number",hideDetails:!0,min:0,max:u.value.data.length-1}),null,16,["modelValue"])])])]),_:1}),c(s,{cols:"12",lg:"6"},{default:x(()=>[(g(),v("svg",{viewBox:"0 0 100 100",xmlns:"http://www.w3.org/2000/svg",style:{width:"100%",margin:"0 auto"},class:"border bg-grey-lighten-4",onMouseup:t[8]||(t[8]=k(e=>y.value.stop(e),["prevent"]))},[(g(!0),v(z,null,I(u.value.edges,e=>(g(),v("line",b({style:{stroke:"#ff000088","stroke-width":"0.3"}},{x1:e.x1,y1:e.y1,x2:e.x2,y2:e.y2}),null,16))),256)),(g(!0),v(z,null,I(u.value.path.edges||[],e=>(g(),v("line",b({style:{stroke:"#00ff0088","stroke-width":"2"}},{x1:e.x1,y1:e.y1,x2:e.x2,y2:e.y2}),null,16))),256)),(g(!0),v(z,null,I(u.value.data,e=>(g(),v("g",{transform:`translate(${e.x}, ${e.y})`,onMousedown:k(a=>y.value.init(a,e),["prevent"]),style:{cursor:"grab"}},[m("circle",{cx:"0",cy:"0",r:"5",fill:E(e)},null,8,Q),m("text",Z,M(e.id),1)],40,K))),256))],32))]),_:1})]),_:1})]),_:1})}}});export{se as default};
