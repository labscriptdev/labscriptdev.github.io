var c=Object.defineProperty;var p=(o,e,s)=>e in o?c(o,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):o[e]=s;var i=(o,e,s)=>(p(o,typeof e!="symbol"?e+"":e,s),s);import{_ as h}from"./scene-gltf.6f0110b7.js";import{c as l,w as _,o as m,a as u}from"./entry.76f46d94.js";import"./three.module.8fae685a.js";import"./matter.82a612f9.js";const d=u("div",{style:{position:"absolute",bottom:"0",left:"0"}},"Default content",-1),f={meta:{name:"F-15",order:1}},g=Object.assign(f,{__name:"index",setup(o){class e{onInput(){}onCreate(){}onUpdate(){}onDelete(){}}class s extends e{constructor(){super(...arguments);i(this,"orbitControls",!0)}onCreate(){this.motor.global.test="aaaa"}onUpdate(){}}class a extends e{onInput(t){return{up:t.w,down:t.s,left:t.a,right:t.d}}onCreate(){this.rotationSpeed=.05,this.camera=this.motor.camera,this.sun=this.motor.scene.getObjectByName("sun"),this.sun.intensity=2}onUpdate(){const{THREE:t}=this.motor;this.object.translateX(.5),this.camera.lookAt(this.object.position),this.input.up&&this.object.rotateOnAxis(new t.Vector3(0,0,1),this.rotationSpeed),this.input.down&&this.object.rotateOnAxis(new t.Vector3(0,0,1),-this.rotationSpeed),this.input.left&&this.object.rotateOnAxis(new t.Vector3(0,1,0),this.rotationSpeed),this.input.right&&this.object.rotateOnAxis(new t.Vector3(0,1,0),-this.rotationSpeed)}}return(n,t)=>{const r=h;return m(),l(r,{style:{height:"600px"},scene:"/assets/threejs/f15/scene.glb",scripts:[s,a]},{content:_(()=>[d]),_:1},8,["scripts"])}}});export{g as default};
