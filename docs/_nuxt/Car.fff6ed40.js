import{l as c}from"./matter.37adc275.js";import{O as B,V as L,A as R,L as k}from"./three.module.77711dbc.js";import"./entry.a48b6200.js";/**
 * @author       Yannick Deubel (https://github.com/yandeu)
 * @copyright    Copyright (c) 2021 Yannick Deubel; Project Url: https://github.com/enable3d/enable3d
 * @license      {@link https://github.com/enable3d/enable3d/blob/master/LICENSE|GNU GPLv3}
 */class F extends B{constructor(){super(),this.isExtendedObject3D=!0,this.isGroup=!1,this.vector3=new L,this.hasBody=!1,this.fragmentDepth=0,this.breakable=!1,this.fractureImpulse=1,this._currentAnimation="",this._animationActions=new Map,this.name=`object-${this.id}`}get world(){return{theta:this.worldTheta,phi:this.worldPhi}}get worldTheta(){return this.getWorldDirection(this.vector3),Math.atan2(this.vector3.x,this.vector3.z)}get worldPhi(){return this.getWorldDirection(this.vector3),Math.acos(this.vector3.y)}set animationMixer(t){this._animationMixer=t}get animationMixer(){return this._animationMixer||(this._animationMixer=new R(this)),this._animationMixer}get anims(){return{current:this._currentAnimation,add:(t,e)=>this._animsAdd(t,e),get:t=>this._animsGet(t),play:(t,e=500,s=!0)=>this._animsPlay(t,e,s),mixer:this.animationMixer}}get animation(){return c('Please use "anims" instead of "animation"'),this.anims}_animsAdd(t,e){this._animationActions.set(t,this.animationMixer.clipAction(e))}_animsGet(t){const e=this._animationActions.get(t);return e||c(`Animation(${t}) not found!`),e}_animsPlay(t,e=500,s=!0){const i=this._animationActions.get(t),o=this._animationActions.get(this._currentAnimation);i&&(i.reset(),o&&(i.crossFadeFrom(o,e/1e3,!0),i.clampWhenFinished=!0),s||i.setLoop(k,0),i.play()),this._currentAnimation=t}setAction(t){c(`setAction(${t}) is deprecated. Use animation.play(${t}) instead!`)}traverse(t){super.traverse(t)}traverseVisible(t){super.traverseVisible(t)}traverseAncestors(t){super.traverseAncestors(t)}}class W extends F{constructor(t){super(),this.scene=t,this.modelInit()}modelInit(){const i=this.addWheel(1.5,2),o=this.addWheel(-1.5,2),f=this.addWheel(1.5,-2),A=this.addWheel(-1.5,-2),l=this.addRotor(1.5,2),y=this.addRotor(-1.5,2),a=this.addRotor(1.5,-2),r=this.addRotor(-1.5,-2),h=this.addAxis(2),d=this.addAxis(-2+.2,.04),m=this.addAxis(-2-.2),n={axisA:{y:1},axisB:{y:1}};this.motorBackLeft=this.scene.physics.add.constraints.hinge(o.body,y.body,n),this.motorBackRight=this.scene.physics.add.constraints.hinge(i.body,l.body,n),this.motorFrontLeft=this.scene.physics.add.constraints.hinge(A.body,r.body,n),this.motorFrontRight=this.scene.physics.add.constraints.hinge(f.body,a.body,n);const p=(_,Z,g,b)=>{const M=this.scene.physics.add.constraints.hinge(_.body,g.body,{pivotA:{y:.2,z:b},pivotB:{y:-1.3},axisA:{x:1},axisB:{x:1}}),v=this.scene.physics.add.constraints.hinge(Z.body,g.body,{pivotA:{y:-.2,z:b},pivotB:{y:1.3},axisA:{x:1},axisB:{x:1}});return{right:M,left:v}};this.scene.physics.add.constraints.lock(l.body,h.body),this.scene.physics.add.constraints.lock(y.body,h.body),this.m0=p(a,r,m,-0),p(a,r,d,.4),this.plate=this.addPlate(),this.plate.add(this.camera),this.scene.physics.add.constraints.lock(this.plate.body,h.body),this.scene.physics.add.constraints.lock(this.plate.body,m.body);const u=.3,x={angularLowerLimit:{x:0,y:0,z:0},angularUpperLimit:{x:0,y:0,z:0},linearLowerLimit:{x:0,y:-u,z:-.1},linearUpperLimit:{x:0,y:u,z:.1}};this.scene.physics.add.constraints.dof(this.plate.body,d.body,{...x,offset:{y:.9}}),this.scene.physics.add.constraints.dof(this.plate.body,d.body,{...x,offset:{y:-.9}}),this.m0.left.enableAngularMotor(!0,0,1e3),this.m0.right.enableAngularMotor(!0,0,1e3),console.log("Car")}addPlate(){const t=this.scene.add.box({y:1,width:1.8,depth:4.7,mass:5e3,height:.25},{lambert:{wireframe:!0}});return this.scene.physics.add.existing(t),t}addAxis(t,e=.06){const s=this.scene.add.cylinder({z:t,y:1,mass:10,radiusTop:e,radiusBottom:e,height:2.6},{lambert:{color:"blue",transparent:!0,opacity:.5}});return s.rotateZ(Math.PI/2),this.scene.physics.add.existing(s),s}addRotor(t,e){const s=this.scene.add.cylinder({mass:10,radiusBottom:.35,radiusTop:.35,radiusSegments:24,height:.4,x:t,y:1,z:e},{lambert:{color:"red",transparent:!0,opacity:.5}});return s.rotateZ(Math.PI/2),this.scene.physics.add.existing(s),s}addWheel(t,e){const s=this.scene.add.cylinder({mass:20,radiusBottom:.5,radiusTop:.5,radiusSegments:24,height:.35,x:t,y:1,z:e},{lambert:{color:"blue",transparent:!0,opacity:.5}});return s.rotateZ(Math.PI/2),this.scene.physics.add.existing(s),s.body.setFriction(3),s}addAxisRotor(t,e,s){const i=this.scene.add.box({x:t,y:e,z:s,mass:5,width:.25,height:.2,depth:1},{lambert:{transparent:!0,opacity:.5}});return this.scene.physics.add.existing(i),i}}export{W as default};
