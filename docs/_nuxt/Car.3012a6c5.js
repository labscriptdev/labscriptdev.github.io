import{e as h}from"./three.module.5769ac46.js";import"./matter.d12fddd5.js";import{E as n}from"./extendedObject3D.0b2e3a3e.js";import"./entry.b721ff24.js";class p extends n{constructor({game:t}){super(),this.game=t,this.physics=!0}onCreate(){this.carInit()}onUpdate(){this.accelerate()}carInit(){const{physics:t}=this.game.getData(),s=1.5,o=2,a=.2;this.wheelBackRight=this.addWheel(s,o),this.wheelBackLeft=this.addWheel(-s,o),this.wheelFrontRight=this.addWheel(s,-o),this.wheelFrontLeft=this.addWheel(-s,-o),this.rotorBackRight=this.addRotor(s,o),this.rotorBackLeft=this.addRotor(-s,o),this.rotorFrontRight=this.addRotor(s,-o),this.rotorFrontLeft=this.addRotor(-s,-o),this.axisBackOne=this.addAxis(o),this.axisBackTwo=this.addAxis(o+.3),this.axisFrontOne=this.addAxis(-o+a,.04),this.axisFrontTwo=this.addAxis(-o-a);const i={axisA:{y:1},axisB:{y:1}};this.motorBackLeft=t.add.constraints.hinge(this.wheelBackLeft.body,this.rotorBackLeft.body,i),this.motorBackRight=t.add.constraints.hinge(this.wheelBackRight.body,this.rotorBackRight.body,i),this.motorFrontLeft=t.add.constraints.hinge(this.wheelFrontLeft.body,this.rotorFrontLeft.body,i),this.motorFrontRight=t.add.constraints.hinge(this.wheelFrontRight.body,this.rotorFrontRight.body,i),t.add.constraints.lock(this.rotorBackRight.body,this.axisBackOne.body),t.add.constraints.lock(this.rotorBackLeft.body,this.axisBackOne.body),t.add.constraints.lock(this.rotorBackRight.body,this.axisBackTwo.body),t.add.constraints.lock(this.rotorBackLeft.body,this.axisBackTwo.body),this.m0=this.axisToRotor(this.rotorFrontRight,this.rotorFrontLeft,this.axisFrontTwo,-0),this.axisToRotor(this.rotorFrontRight,this.rotorFrontLeft,this.axisFrontOne,.4),this.plate=this.addPlate(),t.add.constraints.lock(this.plate.body,this.axisBackOne.body),t.add.constraints.lock(this.plate.body,this.axisFrontTwo.body);const e=.3,r={angularLowerLimit:{x:0,y:0,z:0},angularUpperLimit:{x:0,y:0,z:0},linearLowerLimit:{x:0,y:-e,z:-.1},linearUpperLimit:{x:0,y:e,z:.1}};t.add.constraints.dof(this.plate.body,this.axisFrontOne.body,{...r,offset:{y:.9}}),t.add.constraints.dof(this.plate.body,this.axisFrontOne.body,{...r,offset:{y:-.9}}),this.m0.left.enableAngularMotor(!0,0,1e3),this.m0.right.enableAngularMotor(!0,0,1e3)}getPosition(){return this.axisFrontOne.position.clone()}accelerate(){this.motorBackLeft.enableAngularMotor(!0,40,.25),this.motorBackRight.enableAngularMotor(!0,40,.25),this.motorFrontLeft.enableAngularMotor(!0,40,.25),this.motorFrontRight.enableAngularMotor(!0,40,.25)}addWheel(t,s){const{physics:o,tire:a}=this.game.getData(),i=this.physics?20:0,e=o.factory.add.cylinder({mass:i,radiusBottom:.5,radiusTop:.5,radiusSegments:24,height:.35,x:t,y:1,z:s},{custom:new h({map:a})});return e.rotateZ(Math.PI/2),o.add.existing(e),e.body.setFriction(3),e}addRotor(t,s){const{physics:o}=this.game.getData(),a=this.physics?10:0,i=o.factory.add.cylinder({mass:a,radiusBottom:.35,radiusTop:.35,radiusSegments:24,height:.4,x:t,y:1,z:s},{lambert:{color:16777215,transparent:!0,opacity:.8}});return i.rotateZ(Math.PI/2),o.add.existing(i),i}addAxis(t,s=.06){const{physics:o}=this.game.getData(),a=this.physics?10:0,i=o.factory.add.cylinder({z:t,y:1,mass:a,radiusTop:s,radiusBottom:s,height:2.6},{lambert:{color:"blue",transparent:.5,opacity:.5}});return i.rotateZ(Math.PI/2),o.add.existing(i),i}addPlate(){const{physics:t}=this.game.getData(),s=this.physics?5e3:0;return t.add.box({y:1,width:1.8,depth:4.7,mass:s,height:.25},{lambert:{color:"blue",transparent:.5,opacity:.5}})}axisToRotor(t,s,o,a){const{physics:i}=this.game.getData(),e=i.add.constraints.hinge(t.body,o.body,{pivotA:{y:.2,z:a},pivotB:{y:-1.3},axisA:{x:1},axisB:{x:1}}),r=i.add.constraints.hinge(s.body,o.body,{pivotA:{y:-.2,z:a},pivotB:{y:1.3},axisA:{x:1},axisB:{x:1}});return{right:e,left:r}}}export{p as default};
