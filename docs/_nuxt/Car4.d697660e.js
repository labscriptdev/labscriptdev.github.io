import{g as c}from"./three.module.5769ac46.js";import"./matter.61178a20.js";import{E as d}from"./extendedObject3D.ff8a5304.js";import"./entry.59a3e4a6.js";class F extends d{constructor(e){super(),this.name="Car",this.game=e.game,this.position.set(e.x||0,e.y||0,e.z||0),this.carWidth=2,this.carDepth=4,this.carMass=100,this.axisDistanceBetween=4,this.wheelRadius=.4,this.maxEngineForce=400,this.maxBreakingForce=400,this.suspensionRestLength=.6,this.suspensionStiffness=10,this.suspensionDamping=.1,this.suspensionCompression=4.4,this.friction=50,this.rollInfluence=.01,this.steerForce=.005,this.steerMax=.7,this._tireSteer=0,this._engineForce=0}preload(){return{mercedes:{type:"gltf",url:"/assets/threejs/models/vehicles/mercedes/scene.gltf"}}}onCreate(){this.carCreateVisual(),this.carCreatePhysics()}onUpdate(){this.carUpdate();const{camera:e}=this.game.getData();this.chassi.add(e),e.position.set(0,2,-this.carDepth-2);const t=this.chassi.position.clone();e.lookAt(t)}getSpeed(){return this.vehicle.getCurrentSpeedKmHour()}carCreateVisual(){const{x:e,y:t,z:s}=this.position;this.chassi=this.meshCreate({type:"box",data:{x:e,y:t,z:s,width:this.carWidth,depth:this.carDepth,mass:5e3,height:.25},material:{lambert:{wireframe:!0}},physics:{mass:this.carMass},callback:h=>h}),this.wheels=[{x:-(this.carWidth/2),y:0,z:this.axisDistanceBetween/2},{x:this.carWidth/2,y:0,z:this.axisDistanceBetween/2},{x:-(this.carWidth/2),y:0,z:-(this.axisDistanceBetween/2)},{x:this.carWidth/2,y:0,z:-(this.axisDistanceBetween/2)}].map((h,r)=>this.meshCreate({type:"cylinder",data:{x:h.x,y:h.y,z:h.z,radiusBottom:this.wheelRadius,radiusTop:this.wheelRadius,radiusSegments:24,height:.35},material:{lambert:{color:0}},callback:n=>(n.geometry.center(),n)}))}carCreatePhysics(){this.position;const{physics:e}=this.game.getData(),{physicsWorld:t}=e,s=new Ammo.btVehicleTuning,h=new Ammo.btDefaultVehicleRaycaster(t),r=new Ammo.btRaycastVehicle(s,this.chassi.body.ammo,h);r.setCoordinateSystem(0,1,2),t.addAction(r),this.chassi.body.skipUpdate=!0,this.vehicle=r,this.wheels.forEach((n,l)=>{const a=l<=1,o=n.position.clone(),g=new Ammo.btVector3(o.x,o.y,o.z),m=new Ammo.btVector3(0,-1,0),p=new Ammo.btVector3(-1,0,0),i=r.addWheel(g,m,p,this.suspensionRestLength,this.wheelRadius,s,a);i.set_m_suspensionStiffness(this.suspensionStiffness),i.set_m_wheelsDampingRelaxation(this.suspensionDamping),i.set_m_wheelsDampingCompression(this.suspensionCompression),i.set_m_frictionSlip(this.friction),i.set_m_rollInfluence(this.rollInfluence)})}carUpdate(){const{input:e}=this.game.getData(),t=0,s=1,h=2,r=3;e.w&&(this._engineForce=c.lerp(this._engineForce,this.maxEngineForce,.02)),e.s&&(this._engineForce=c.lerp(this._engineForce,-this.maxEngineForce,.02)),!e.w&&!e.s&&(this._engineForce=c.lerp(this._engineForce,0,.02)),this.vehicle.applyEngineForce(this._engineForce,h),this.vehicle.applyEngineForce(this._engineForce,r),e.a&&(this._tireSteer=c.lerp(this._tireSteer,this.steerMax,this.steerForce)),e.d&&(this._tireSteer=c.lerp(this._tireSteer,-this.steerMax,this.steerForce)),!e.a&&!e.d&&(this._tireSteer=c.lerp(this._tireSteer,0,this.steerForce*3)),this.vehicle.setSteeringValue(this._tireSteer,t),this.vehicle.setSteeringValue(this._tireSteer,s),(()=>{this.wheels.forEach((o,g)=>{let m=this.vehicle.getWheelTransformWS(g),p=m.getOrigin(),i=m.getRotation();o.position.set(p.x(),p.y(),p.z()),o.quaternion.set(i.x(),i.y(),i.z(),i.w()),o.rotateZ(Math.PI/2)});let n=this.vehicle.getChassisWorldTransform(),l=n.getOrigin(),a=n.getRotation();this.chassi.position.set(l.x(),l.y(),l.z()),this.chassi.quaternion.set(a.x(),a.y(),a.z(),a.w())})()}meshCreate(e={}){const{physics:t}=this.game.getData();let s=t.factory.add[e.type](e.data,e.material);return typeof e.callback=="function"&&(s=e.callback(s)),typeof e.physics=="object"&&t.add.existing(s,e.physics||{}),s}}export{F as default};
