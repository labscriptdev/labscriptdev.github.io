import{v as r,x as l,y as o}from"./entry.5d33167f.js";import{_ as d}from"./lodash.bf067173.js";const c="YYYY-MM-DDTHH:mm:ss.000z";class w{constructor(t={}){const{$dayjs:s}=r();this.ready=!1,this.date=t.date||s().startOf("month").format("YYYY-MM-DD"),this.storage=l("clockify",{token:"",amountPerHour:13,amountCurrency:"BRL",amountGoal:1e3,currencyFrom:"AUD",currencyTo:"BRL"}),this.workingItem=!1,this.user=!1,this.workspace={loading:!1,item:!1,items:[]},this.timeEntry={loading:!1,items:[]},this.currency={loading:!1,params:{from:"AUD",to:"BRL"},items:[]}}destroy(){this.interval&&clearInterval(this.interval)}async init(){this.ready=!1,await this.userLoad(),await this.workspaceLoad(),await this.timeEntryLoad(),await this.currenciesLoad(),this.ready=!0,this.interval&&clearInterval(this.interval),this.interval=setInterval(async()=>{const{$dayjs:t}=r();parseInt(t().format("s"))==0&&(await this.timeEntryLoad(),await this.currenciesLoad()),this.timeEntryInterval()},1e3)}async request(t){return o.request({...t,url:["https://api.clockify.me/api/v1",t.url.replace(/^\/|\/$/g,"")].join("/"),headers:{"X-Api-Key":this.storage.token}})}async userLoad(){const{data:t}=await this.request({url:"/user"});this.user={id:t.id,email:t.email,name:t.name,profilePicture:t.profilePicture}}async workspaceLoad(){this.workspace.loading=!0;const{data:t}=await this.request({url:"/workspaces"});this.workspace.items=t,this.workspace.items.length==1&&(this.workspace.item=this.workspace.items[0]),this.workspace.loading=!1}async timeEntryLoad(){const{$dayjs:t}=r();this.timeEntry.loading&&clearTimeout(this.timeEntry.loading),this.timeEntry.loading=setTimeout(async()=>{if(!this.user||!this.workspace.item)return;const{data:s}=await this.request({url:`/workspaces/${this.workspace.item.id}/user/${this.user.id}/time-entries`,params:{start:t(this.date).startOf("month").format(c),end:t(this.date).endOf("month").format(c)}});this.timeEntry.items=s.map(e=>(e.workedMinutes=(()=>{if(!e.timeInterval.end)return 0;let a=t(e.timeInterval.start).diff(e.timeInterval.end);return Math.max(a,a*-1)/1e3/60})(),e)),this.timeEntry.loading=!1},1e3)}async timeEntryInterval(){const{$dayjs:t}=r(),s=t();this.workingItem=!1,this.timeEntry.items.forEach(e=>{if(e.timeInterval.end)return;const a=s.diff(e.timeInterval.start)/1e3/60;e.workedMinutes=a,this.workingItem=e})}async currenciesLoad(){this.currency.loading=!0;const{data:t}=await o.get(`https://api.exchangerate.host/latest?base=${this.storage.currencyFrom}`);this.currency.items=Object.entries(t.rates).map(([s,e])=>({code:s,value:e})),this.currency.loading=!1}currencyConverted(t,s=null){const e=d.head(this.currency.items.filter(a=>a.code==this.storage.currencyTo))||{code:"000",value:1};return t*e.value}result(){const{$dayjs:t}=r(),s=this.timeEntry.items.reduce((i,n)=>i+n.workedMinutes,0),e=this.storage.amountPerHour*(s/60),a=e/this.storage.amountGoal*100,u=t().date()/t().daysInMonth()*100,h=(()=>{const i=t().daysInMonth()-t().date(),m=(this.storage.amountGoal-e)/this.storage.amountPerHour;return Math.ceil(m/i)})();return{workedMinutes:s,amount:e,amountGoalPercent:a,amountDaysPercent:u,goalWorkDaysAvg:h}}}export{w as default};
